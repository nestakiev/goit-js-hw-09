{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAeC,EAAUC,IAZlC,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC7BC,YAAW,KACPN,EACFI,EAAS,C,SAACN,E,MAAUC,IAEpBM,EAAQ,C,SAACP,E,MAAUC,MAEpBA,MAIDQ,CAAcX,EAAUC,GAAYW,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACpDN,EAAAgB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,UAEtDY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBN,EAAAgB,OAAOG,QAAQ,sBAAoBd,QAAeC,WAxCzC,CACXc,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUpB,MAAEA,EAAKqB,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAIzB,EAAa,EACbC,EAAW,EAEf,IAAK,IAAIyB,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EACrCzB,GAAY,EACZD,EAAa4B,OAAO1B,EAAMyB,OAASC,OAAOL,EAAKI,OAASC,OAAOF,GAE/D5B,EAAcG,EAAUD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  let totalDelay = 0;\n  let position = 0;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    position += 1;\n    totalDelay = Number(delay.value) + Number(step.value) * Number(i);\n        \n    PromiseResult(position, totalDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) =>\n  setTimeout(() => {  \n  if (shouldResolve) {\n    resolve(({position, delay}));\n  } else {\n    reject(({position, delay}));\n  }  \n}, delay));\n}\n\nfunction PromiseResult (position, totalDelay) {\n  createPromise(position, totalDelay).then(({ position, delay}) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay}) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n}\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$PromiseResult","position1","totalDelay","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure","form","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","value","Number"],"version":3,"file":"03-promises.befb50f7.js.map"}